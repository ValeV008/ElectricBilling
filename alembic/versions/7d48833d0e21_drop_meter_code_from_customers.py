"""drop meter_code from customers

Revision ID: 7d48833d0e21
Revises: 0001_initial
Create Date: 2025-09-08 13:15:35.247076
"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "7d48833d0e21"
down_revision = "0001_initial"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_consumption_customer_ts"), table_name="consumption_records")
    op.drop_table("consumption_records")
    op.drop_table("invoices")
    op.drop_table("customers")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customers",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('customers_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("meter_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="customers_pkey"),
        sa.UniqueConstraint(
            "meter_code",
            name="customers_meter_code_key",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "invoices",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("customer_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "period_start", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "period_end", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "total_eur",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"], ["customers.id"], name=op.f("invoices_customer_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("invoices_pkey")),
    )
    op.create_table(
        "consumption_records",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("customer_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("ts", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column(
            "kwh",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "price_eur_per_kwh",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customers.id"],
            name=op.f("consumption_records_customer_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("consumption_records_pkey")),
    )
    op.create_index(
        op.f("ix_consumption_customer_ts"),
        "consumption_records",
        ["customer_id", "ts"],
        unique=False,
    )
    # ### end Alembic commands ###
